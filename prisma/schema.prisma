generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Admin {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt()

  @@map("admin_users")
}

model Influencer {
  id       Int     @id @default(autoincrement())
  name     String
  username String  @unique
  niche    String
  reach    Int
  photo    String?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt()

  InfluencerAddress InfluencerAddress[]
  InfluencerBrand   InfluencerBrand[]

  @@map("influencers")
}

model InfluencerAddress {
  id            Int    @id @default(autoincrement())
  influencer_id Int
  street        String
  number        String
  city          String
  state         String
  zipCode       String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt()

  influencer Influencer @relation(fields: [influencer_id], references: [id], onDelete: Cascade)

  @@map("addresses")
}

model Brand {
  id          Int    @id @default(autoincrement())
  name        String
  niche       String
  description String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt()

  InfluencerBrand InfluencerBrand[]

  @@map("brands")
}

model InfluencerBrand {
  id            Int @id @default(autoincrement())
  influencer_id Int
  brand_id      Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt()

  influencer Influencer @relation(fields: [influencer_id], references: [id], onDelete: Cascade)
  brand      Brand      @relation(fields: [brand_id], references: [id], onDelete: Cascade)

  @@unique([influencer_id, brand_id])
}
